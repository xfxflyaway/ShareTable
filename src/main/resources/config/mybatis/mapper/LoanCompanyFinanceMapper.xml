<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simpleway.frst.mapper.LoanCompanyFinanceMapper">
  <resultMap id="BaseResultMap" type="com.simpleway.frst.domain.dto.LoanCompanyFinance">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="company_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="company_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pay_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="finance_project" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="finance_account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="partner" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="begin_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="approval_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="residual_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="state" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="comp_state" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    id, company_id, company_name, pay_name, finance_project, finance_account, partner, 
    begin_time, end_time, approval_amount, residual_amount, state, comp_state
  </sql>
  <select id="selectByExample" parameterType="com.simpleway.frst.domain.dto.LoanCompanyFinanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_loan_company_finance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_loan_company_finance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_loan_company_finance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.simpleway.frst.domain.dto.LoanCompanyFinance">
    insert into t_loan_company_finance (id, company_id, company_name, 
      pay_name, finance_project, finance_account, 
      partner, begin_time, end_time, 
      approval_amount, residual_amount, state, 
      comp_state)
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{companyName,jdbcType=VARCHAR}, 
      #{payName,jdbcType=VARCHAR}, #{financeProject,jdbcType=VARCHAR}, #{financeAccount,jdbcType=VARCHAR}, 
      #{partner,jdbcType=VARCHAR}, #{beginTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, 
      #{approvalAmount,jdbcType=DECIMAL}, #{residualAmount,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}, 
      #{compState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.simpleway.frst.domain.dto.LoanCompanyFinance">
    insert into t_loan_company_finance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="payName != null">
        pay_name,
      </if>
      <if test="financeProject != null">
        finance_project,
      </if>
      <if test="financeAccount != null">
        finance_account,
      </if>
      <if test="partner != null">
        partner,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="approvalAmount != null">
        approval_amount,
      </if>
      <if test="residualAmount != null">
        residual_amount,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="compState != null">
        comp_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="payName != null">
        #{payName,jdbcType=VARCHAR},
      </if>
      <if test="financeProject != null">
        #{financeProject,jdbcType=VARCHAR},
      </if>
      <if test="financeAccount != null">
        #{financeAccount,jdbcType=VARCHAR},
      </if>
      <if test="partner != null">
        #{partner,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="approvalAmount != null">
        #{approvalAmount,jdbcType=DECIMAL},
      </if>
      <if test="residualAmount != null">
        #{residualAmount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="compState != null">
        #{compState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simpleway.frst.domain.dto.LoanCompanyFinance">
    update t_loan_company_finance
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="payName != null">
        pay_name = #{payName,jdbcType=VARCHAR},
      </if>
      <if test="financeProject != null">
        finance_project = #{financeProject,jdbcType=VARCHAR},
      </if>
      <if test="financeAccount != null">
        finance_account = #{financeAccount,jdbcType=VARCHAR},
      </if>
      <if test="partner != null">
        partner = #{partner,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="approvalAmount != null">
        approval_amount = #{approvalAmount,jdbcType=DECIMAL},
      </if>
      <if test="residualAmount != null">
        residual_amount = #{residualAmount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="compState != null">
        comp_state = #{compState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simpleway.frst.domain.dto.LoanCompanyFinance">
    update t_loan_company_finance
    set company_id = #{companyId,jdbcType=BIGINT},
      company_name = #{companyName,jdbcType=VARCHAR},
      pay_name = #{payName,jdbcType=VARCHAR},
      finance_project = #{financeProject,jdbcType=VARCHAR},
      finance_account = #{financeAccount,jdbcType=VARCHAR},
      partner = #{partner,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      approval_amount = #{approvalAmount,jdbcType=DECIMAL},
      residual_amount = #{residualAmount,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      comp_state = #{compState,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>



  <select id="selectByFinanceAccount" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM
    t_loan_company_finance
    WHERE
    finance_account = #{financeAccount}

  </select>













</mapper>